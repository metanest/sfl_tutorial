// vim:set ft=sfl:
%d HDLANG_SFL
%i "decoder.sfh"
module decoder {
    wire temp<16>;

    par {
        temp =
            (hex<3> & hex<2> & hex<1> & hex<0>) ||  // 15
            (hex<3> & hex<2> & hex<1> & ^hex<0>) ||  // 14
            (hex<3> & hex<2> & ^hex<1> & hex<0>) ||  // 13
            (hex<3> & hex<2> & ^hex<1> & ^hex<0>) ||  // 12
            (hex<3> & ^hex<2> & hex<1> & hex<0>) ||  // 11
            (hex<3> & ^hex<2> & hex<1> & ^hex<0>) ||  // 10
            (hex<3> & ^hex<2> & ^hex<1> & hex<0>) ||  // 9
            (hex<3> & ^hex<2> & ^hex<1> & ^hex<0>) ||  // 8
            (^hex<3> & hex<2> & hex<1> & hex<0>) ||  // 7
            (^hex<3> & hex<2> & hex<1> & ^hex<0>) ||  // 6
            (^hex<3> & hex<2> & ^hex<1> & hex<0>) ||  // 5
            (^hex<3> & hex<2> & ^hex<1> & ^hex<0>) ||  // 4
            (^hex<3> & ^hex<2> & hex<1> & hex<0>) ||  // 3
            (^hex<3> & ^hex<2> & hex<1> & ^hex<0>) ||  // 2
            (^hex<3> & ^hex<2> & ^hex<1> & hex<0>) ||  // 1
            (^hex<3> & ^hex<2> & ^hex<1> & ^hex<0>);  // 0

        led7 =
            (temp<0> | temp<2> | temp<3> | temp<5> | temp<6> | temp<7> |
             temp<8> | temp<9> | temp<10> | temp<12> | temp<14> | temp<15>) ||  // a
            (temp<0> | temp<1> | temp<2> | temp<3> | temp<4> |
             temp<7> | temp<8> | temp<9> | temp<10> | temp<13>) ||  // b
            (temp<0> | temp<1> | temp<3> | temp<4> | temp<5> | temp<6> |
             temp<7> | temp<8> | temp<9> | temp<10> | temp<11> | temp<13>) ||  // c
            (temp<0> | temp<2> | temp<3> | temp<5> | temp<6> |
             temp<8> | temp<9> | temp<11> | temp<12> | temp<13> | temp<14>) ||  // d
            (temp<0> | temp<2> | temp<6> | temp<8> | temp<10> |
             temp<11> | temp<12> | temp<13> | temp<14> | temp<15>) ||  // e
            (temp<0> | temp<4> | temp<5> | temp<6> | temp<8> |
             temp<9> | temp<10> | temp<11> | temp<12> | temp<14> | temp<15>) ||  // f
            (temp<2> | temp<3> | temp<4> | temp<5> | temp<6> | temp<8> |
             temp<9> | temp<10> | temp<11> | temp<13> | temp<14> | temp<15>);  // g
    }  // par end
}  // module end
